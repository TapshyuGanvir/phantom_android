apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 32
    defaultConfig {
        applicationId "com.sixsimplex.phantom"
        minSdkVersion 21
        targetSdkVersion 32
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        // Enabling multiDex support.
        multiDexEnabled true
        ndk {
            moduleName "iconv"
            abiFilters "armeabi", "armeabi-v7a", "x86", "mips", "arm64-v8a", "x86_64"

        }

    }

    packagingOptions {
        exclude 'jetified-blueprints-core-2.6.0.jar'
        exclude 'blueprints-core-2.6.0.jar'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            versionNameSuffix '-rel' + '_' + getDateTime()
            applicationVariants.all { variant ->
                customAPKname(variant, defaultConfig, versionNameSuffix)
            }
        }
        debug {
            versionNameSuffix '-deb' + '_' + getDateTime()

            //to handle customAPKname build
            applicationVariants.all { variant ->
                customAPKname(variant, defaultConfig, versionNameSuffix)
            }
        }
        /* // add the code from below line.
         applicationVariants.all{
                 // this method is use to rename your all apk weather
                 // it may be signed or unsigned(debug apk)
             variant ->
                 variant.outputs.each{
                         // on below line we are setting a name to our apk
                     output->
                         // on below line we are specifying our app name.
                         project.ext { appName = 'Revelo3' }
                         // on below line we are adding the formatted date to our apk file name.
                         def formattedDate = new Date().format('yyyy-MM-dd-HH-mm-ss')
                         // on below line we are creating a new name for our apk.
                         def newName = output.outputFile.name
                         // on below line we are replacing our previous name with our app name.
                         newName = newName.replace("app-", "$project.ext.appName-")
                         // on below line we are replacing -debug with our formatted date.
                         newName = newName.replace("-debug", "-debug-" + formattedDate)
                         // at last we are setting our apk name to it.
                         output.outputFileName = newName
                 }
         }*/


    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    //OS
    sourceSets {
        main {
            jniLibs.srcDirs = ["libs"]
            jni.srcDirs = [] //disable automatic ndk-build call
        }
    }
}
//to handle build process with output as: App_Name_versionName-buildType_date_time.apk
def customAPKname(variant, defaultConfig, buildType) {
    variant.outputs.each { output ->
        def fileName = "PhantomRiderApp_" + defaultConfig.versionCode + "_" + defaultConfig.versionName + buildType + ".apk"
        output.outputFileName = fileName;
    }
}

def getDateTime() {
    def date = new Date()
    def formattedDate = date.format('dd_MM_yyyy__HH_mm')
    return formattedDate
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.annotation:annotation:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.android.volley:volley:1.2.1'
    implementation 'org.apache.commons:commons-lang3:3.6'
    implementation 'org.osmdroid:osmdroid-android:6.1.8'
    implementation "mil.nga.geopackage:geopackage-android:5.1.0"
    //implementation 'org.osmdroid:osmdroid-geopackage:6.1.8'
    implementation 'com.github.MKergall:osmbonuspack:6.6.0'
    //// implementation 'com.sdsmdg.harjot:vectormaster:1.1.3'
    implementation 'com.vividsolutions:jts:1.13'
    implementation 'androidx.viewpager:viewpager:1.0.0'
    // implementation project(path: ':expandablerecyclerview')//library for geometry

    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    annotationProcessor 'com.jakewharton:butterknife-compiler:10.0.0'
    implementation 'com.jakewharton:butterknife:10.0.0'

    implementation 'com.github.woxthebox:draglistview:1.5.2'
    api files('libs/commons-io-2.4.jar')
    api files('libs/blueprints-core-2.6.0.jar')

    implementation 'org.osmdroid:osmdroid-wms:6.1.8'
    /* api files('libs/jackson-annotations-2.2.3.jar')
     api files('libs/jackson-core-2.2.3.jar')
     api files('libs/jackson-databind-2.2.3.jar')*/


    implementation 'com.github.bumptech.glide:glide:4.11.0'
// CameraX core library using the camera2 implementation
    def camerax_version = "1.1.0-alpha11"
    // The following line is optional, as the core library is included indirectly by camera-camera2
    implementation "androidx.camera:camera-core:${camerax_version}"
    implementation "androidx.camera:camera-camera2:${camerax_version}"
    // If you want to additionally use the CameraX Lifecycle library
    implementation "androidx.camera:camera-lifecycle:${camerax_version}"
    // If you want to additionally use the CameraX View class
    implementation "androidx.camera:camera-view:1.0.0-alpha31"//1.0.0-alpha32
    // If you want to additionally use the CameraX Extensions library
    implementation "androidx.camera:camera-extensions:1.0.0-alpha31"

    implementation 'com.github.claucookie.miniequalizer:library:1.0.0'
    // implementation 'com.github.devlight.navigationtabstrip:navigationtabstrip:1.0.4'
    //// implementation 'com.flyco.tablayout:FlycoTabLayout_Lib:2.1.2@aar'
    ////  implementation 'com.thoughtbot:expandablerecyclerview:1.4'

    implementation 'me.grantland:autofittextview:0.2.1'

    // implementation 'mil.nga.geopackage:geopackage-core:5.0.0'

    implementation 'org.jgrapht:jgrapht-core:1.4.0'


    implementation 'com.github.dhaval2404:imagepicker:1.8'
    implementation 'de.hdodenhof:circleimageview:3.1.0'
//    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'
//    implementation 'com.facebook.shimmer:shimmer:0.5.0'
    implementation 'com.intuit.sdp:sdp-android:1.0.6'


    implementation 'androidx.work:work-runtime:2.7.1'//android31 pending intent error

    implementation 'com.google.android.play:core:1.10.3'
    implementation 'com.google.android.gms:play-services-location:19.0.1'

    implementation 'com.github.devsideal:VectorChildFinder:1.0.0'

    implementation project(path: ':revelologgers')
    implementation project(path: ':trails')


}

android { lintOptions { abortOnError false } }